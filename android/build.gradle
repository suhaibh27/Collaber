// This buildscript{} block configures the code driving the build
buildscript {
  /**
   * The nested repositories{} block declares that this build uses the
   * jcenter repository.
   */
  repositories {
    jcenter()
  }

  /**
   * This block declares a dependency on the 4.2.0 version
   * of the Gradle plugin for the buildscript.
   */
  dependencies {
    classpath("com.android.tools.build:gradle:4.2.0")
  }
}

/**
 * This section applies the com.android.application plugin. Note that you
 * should only apply the com.android.application plugin. Applying the Java
 * plugin as well will result in a build error.
 */
plugins {
  id("com.android.application")
}

/**
 * This dependencies block includes any dependencies for the project itself. The
 * following line includes all the JAR files in the libs directory.
 */
dependencies {
  implementation(fileTree(mapOf("dir" (to) ("libs", "include") (to)( listOf("*.jar")))))
  // Add other library dependencies here (see the next step)
}

/**
 * The android{} block configures all of the parameters for the Android build.
 * You must provide a value for at least the compilation target.
 */
android {
  compileSdkVersion(28)

  /**
   * This nested sourceSets block points the source code directories to the
   * existing folders in the project, instead of using the default new
   * organization.
   */
  sourceSets {
    getByName("main") {
      manifest.srcFile("AndroidManifest.xml")
      java.srcDirs("src")
      resources.srcDirs("src")
      aidl.srcDirs("src")
      renderscript.srcDirs("src")
      res.srcDirs("res")
      assets.srcDirs("assets")
    }

    // Move the tests to tests/java, tests/res, etc...
    getByName("instrumentTest").setRoot("tests")

    /**
     * Move the build types to build-types/<type>
     * For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
     * This moves them out of them default location under src/<type>/... which would
     * conflict with src/ being used by the main source set.
     * Adding new build types or product flavors should be accompanied
     * by a similar customization.
     */
    getByName("debug").setRoot('build-types/debug')
    getByName("release").setRoot('build-types/release')
  }
}
dependencies {
  implementation(fileTree(mapOf("dir" (to) ("libs", "include") (to)( listOf("*.jar")))))

  // Google Play Services
  implementation("com.google.android.gms:play-services:9.8.0")

  // Support Libraries
  implementation("com.android.support:appcompat-v7:28.0.0")
  implementation("com.android.support:cardview-v7:28.0.0")
  implementation("com.android.support:design:28.0.0")
  implementation("com.android.support:gridlayout-v7:28.0.0")
  implementation("com.android.support:leanback-v17:28.0.0")
  implementation("com.android.support:mediarouter-v7:28.0.0")
  implementation("com.android.support:palette-v7:28.0.0")
  implementation("com.android.support:recyclerview-v7:28.0.0")
  implementation("com.android.support:support-annotations:28.0.0")
  implementation("com.android.support:support-v13:28.0.0")
  implementation("com.android.support:support-v4:28.0.0")

  // Note: these libraries require the "Google Repository" and "Android Repository"
  //       to be installed via the SDK manager.
}
