{"version":3,"sources":["./src/app/chat/chat.module.ts","./src/app/chat/chat.page.scss","./src/app/chat.service.ts","./src/app/chat/chat-routing.module.ts","./src/app/chat/chat.page.ts","./src/app/chat/chat.page.html"],"names":[],"mappings":"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","file":"chat-chat-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatPageRoutingModule } from './chat-routing.module';\n\nimport { ChatPage } from './chat.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChatPageRoutingModule\n  ],\n  declarations: [ChatPage]\n})\nexport class ChatPageModule {}\n","export default \".message-input {\\n  width: 100%;\\n  border: 1px solid var(--ion-color-medium);\\n  border-radius: 6px;\\n  background: #fff;\\n  resize: none;\\n  margin-top: 0px;\\n  --padding-start: 8px;\\n}\\n\\n.message {\\n  padding: 10px !important;\\n  border-radius: 10px !important;\\n  margin-bottom: 4px !important;\\n  white-space: pre-wrap;\\n}\\n\\n.my-message {\\n  background: var(--ion-color-tertiary);\\n  color: #fff;\\n}\\n\\n.other-message {\\n  background: var(--ion-color-success);\\n  color: #fff;\\n}\\n\\n.time {\\n  color: white;\\n  float: right;\\n  font-size: small;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGNoYXQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLHlDQUF5QztFQUN6QyxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixlQUFlO0VBQ2Ysb0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0Usd0JBQXdCO0VBQ3hCLDhCQUE4QjtFQUM5Qiw2QkFBNkI7RUFDN0IscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UscUNBQXFDO0VBQ3JDLFdBQVc7QUFDYjs7QUFFQTtFQUNFLG9DQUFvQztFQUNwQyxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtFQUNaLGdCQUFnQjtBQUNsQiIsImZpbGUiOiJjaGF0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tZXNzYWdlLWlucHV0IHtcclxuICB3aWR0aDogMTAwJTtcclxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1pb24tY29sb3ItbWVkaXVtKTtcclxuICBib3JkZXItcmFkaXVzOiA2cHg7XHJcbiAgYmFja2dyb3VuZDogI2ZmZjtcclxuICByZXNpemU6IG5vbmU7XHJcbiAgbWFyZ2luLXRvcDogMHB4O1xyXG4gIC0tcGFkZGluZy1zdGFydDogOHB4O1xyXG59XHJcblxyXG4ubWVzc2FnZSB7XHJcbiAgcGFkZGluZzogMTBweCAhaW1wb3J0YW50O1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHggIWltcG9ydGFudDtcclxuICBtYXJnaW4tYm90dG9tOiA0cHggIWltcG9ydGFudDtcclxuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XHJcbn1cclxuXHJcbi5teS1tZXNzYWdlIHtcclxuICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItdGVydGlhcnkpO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG4ub3RoZXItbWVzc2FnZSB7XHJcbiAgYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXN1Y2Nlc3MpO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG4udGltZSB7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGZsb2F0OiByaWdodDtcclxuICBmb250LXNpemU6IHNtYWxsO1xyXG59XHJcbiJdfQ== */\";","/* eslint-disable max-len */\n/* eslint-disable object-shorthand */\n/* eslint-disable eqeqeq */\n/* eslint-disable prefer-const */\nimport { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\n//import * as firebase from 'firebase/app';\nimport { switchMap, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport firebase from 'firebase/app';\n\n\nexport interface Message {\n  createdAt: firebase.firestore.FieldValue;\n  id: string;\n  from: string;\n  msg: string;\n  fromName: string;\n  myMsg: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n  currentUser = null;\n  constructor(private afAuth: AngularFireAuth, private afs: AngularFirestore) {\n    this.currentUser={uid:'QSqITrKDOZPEY7qo68OnkTsXF8q1'};\n    /**this.afAuth.onAuthStateChanged((user) => {\n      this.currentUser = user;\n    });*/\n  }\n\n\n  addChatMessage(gid,msg) {\n    return this.afs.collection('Groups').doc(gid).collection('Messages').add({\n      msg: msg,\n      from: this.currentUser.uid,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    });\n  }\n  getChatMessages(gid) {\n    let users = [];\n    return this.getUsers().pipe(\n      switchMap(res => {\n        users = res;\n        return this.afs.collection('Groups').doc(gid).collection('Messages', ref => ref.orderBy('createdAt')).valueChanges() as Observable<Message[]>;\n      }),\n      map(messages => {\n        // Get the real name for each user\n        for (let m of messages) {\n          m.fromName = this.getUserForMsg(m.from, users);\n          m.myMsg = this.currentUser.uid === m.from;\n        }\n        return messages;\n      })\n    );\n  }\n  private getUsers() {\n    return this.afs.collection('users').valueChanges() as Observable<any>;\n  }\n  private getUserForMsg(msgFromId, users): string {\n    for (let usr of users) {\n      console.log(usr);\n      if (usr.userID == msgFromId) {\n        return usr.username;\n      }\n    }\n    return 'Deleted';\n  }\n  // TODO Chat functionality\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatPage } from './chat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChatPageRoutingModule {}\n","import { ActivatedRoute } from '@angular/router';\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @typescript-eslint/member-ordering */\n/* eslint-disable @typescript-eslint/semi */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-var */\n/* eslint-disable @typescript-eslint/prefer-for-of */\n/* eslint-disable @typescript-eslint/type-annotation-spacing */\n/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable @typescript-eslint/quotes */\n/* eslint-disable prefer-const */\n/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/naming-convention */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonContent } from '@ionic/angular';\nimport { Observable } from 'rxjs';\nimport { ChatService } from '../chat.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.page.html',\n  styleUrls: ['./chat.page.scss'],\n})\nexport class ChatPage implements OnInit {\n  @ViewChild(IonContent) content: IonContent;\n\n  messages: Observable<any[]>;\n  newMsg = '';\n  gid='GOl2qCH9kKVbVq1x1SSc'\n  constructor(private activatedRoute:ActivatedRoute, private chatService: ChatService, private router: Router) {\n    this.gid=this.activatedRoute.snapshot.paramMap.get('id')\n   }\n\n  ngOnInit() {\n    this.messages = this.chatService.getChatMessages(this.gid);\n  }\n\n  sendMessage() {\n    this.chatService.addChatMessage(this.gid,this.newMsg).then(() => {\n      this.newMsg = '';\n      this.content.scrollToBottom();\n    });\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar class='myBackgroundColor'>\\n    <ion-title color='light'>Seniors</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button color='light' defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n\\n  <ion-grid>\\n    <ion-row *ngFor=\\\"let message of messages | async\\\">\\n      <ion-col size=\\\"9\\\" class=\\\"message\\\"\\n        [offset]=\\\"message.myMsg ? 3 : 0\\\"\\n        [ngClass]=\\\"{ 'my-message': message.myMsg, 'other-message': !message.myMsg }\\\">\\n        <b>{{ message.fromName }}</b><br>\\n        <span>{{ message.msg }}\\n        </span>\\n        <div class=\\\"time ion-text-right\\\"><br>{{ message.createdAt?.toMillis() | date:'short' }}</div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-row class=\\\"ion-align-items-center\\\">\\n      <ion-col size=\\\"10\\\">\\n        <ion-textarea autoGrow=\\\"true\\\" class=\\\"message-input\\\" rows=\\\"1\\\" maxLength=\\\"500\\\" [(ngModel)]=\\\"newMsg\\\" >\\n        </ion-textarea>\\n      </ion-col>\\n      <ion-col size=\\\"2\\\">\\n        <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" color=\\\"primary\\\" [disabled]=\\\"newMsg === ''\\\"\\n          class=\\\"msg-btn\\\" (click)=\\\"sendMessage()\\\">\\n          <ion-icon name=\\\"send\\\" slot=\\\"icon-only\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-toolbar>\\n</ion-footer>\\n\";"],"sourceRoot":"webpack:///"}